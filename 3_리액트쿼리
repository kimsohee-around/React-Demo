BookingsGrid 는 데이터를 집약적으로 표현하는 컴포넌트이며 Grid 의 cell 을 표시할 때 
네트워크가 느릴 떄도 반응성이 좋게 느껴지는 개선 방법이 필요한다.

BookingsPage 와 BookablesView 컴포넌트는 BookablesList 예약자원을 읽어오고
UserPicker와 UserList 는 모든 사용자를 읽어오는데,
이 때 한번 fetch 로 읽어온 데이터에 대해 화면이 바뀔 때 다시 fetch 할 필요가 없다.


React Query
: 리액트 앱에서 서버 상태를 관리하기 위한 라이브러리
: https://react-query.tanstack.com

: fetch 를 실행하는 useFetch 개선 방법
- 1) 캐싱 : 데이터 캐시를 관리하며 한 번 가져온 데이터를 요청하면 캐싱된 것을 전달한다.
- 2) 동일한 데이터에 대해 중복된 요청을 하나로 줄이기
- 3) 백그라운드에서 만료된 데이터 갱신 등등

: 설치  npm install react-query


컴포넌트들의 리액크 쿼리 캐싱
: 프로바이더 컴포넌트를 사용한다. 
: new QueryClient() 객체를 생성하여 컴포넌트들에게 전달. 캐시 및 추가기능을 제공한다. -> App.jsx
: useQuery 를 사용하여 데이터를 읽어온다. 데이터, 상태, 오류를 프로퍼티로 갖는 객체를 리턴한다.
    ㄴ key 를 설정한다. - 캐시에서 데이터 식별. 키값에 해당하는 데이터를 즉시 반환하고 백그라운드에서 최신데이터를 fetch 한다.
    ㄴ 그래서 데이터를 읽어올 비동기 함수를 전달한다.
    ㄴ key 는 문자열, 배열, 객체 모두 가능한다.
: 캐시에 저장된 값을 읽어올 떄에는 getQueryData 메소드를 사용한다.


http://localhost:5173/bookables/2/edit  실행방법
- 1) http://localhost:5173/bookables/ 에서 2번을 클릭하고 edit 버튼
- 2) 주소창에서 바로 입력하고 실행 -> 스피너 동작

//=== 코드 주석 ===//

  const {data, isLoading} = useQuery(
        ["bookable", id],           ====> key
        () => loadData(`http://localhost:3001/bookables/${id}`),   ===> 비동기함수
        {                               ===> 초깃값을 데이터에 할당  340p
            initialData:
                queryClient.getQueryData("bookables")
                    ?.find(b => b.id === parseInt(id, 10))
        }
    );
    // 세번째 인자는 설정 객체: 초기 설정 및 캐시만료 , 데이터 읽기 오류시 실행할 재시도 정책 등
    //                처음 호출될 때 초기 데이터가 있으면 서버에서 데이터를 읽어오지 않느다?


useMutation
: 리액트 UI 와 서버에 저장된 데이터 상태 동기화를 지원한다.
: useQuery 는 값을 읽어오고 상태값을 브라우저에 일시적으로 캐싱
: useMutaion 은 서버의 상태를 변경

const {mutate:createBookable, status,error} = useMutation(              ==> 변경함수 리턴하여 createBookable 에 할당
        item =>createItem("http://localhost:3001/bookables",item),     ==> 실행할 비동기 함수 전달.
        {
            onSuccess: bookable =>{                             ==> 비동기 함수 처리가 성공하면
                queryClient.setQueryData(
                    "bookables",                                ==> bookables 쿼리 캐시에 새로운 bookable 추가
                    old=> [...(old || []),bookable]
                )
                navigate(`/bookables/${bookable.id}`)           ==> 새로운 url로 이동
            }
        }
    )